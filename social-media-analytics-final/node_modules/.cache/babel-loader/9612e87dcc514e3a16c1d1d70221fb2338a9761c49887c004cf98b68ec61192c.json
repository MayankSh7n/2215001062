{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\2215001062\\\\social-media-analytics-final\\\\src\\\\components\\\\TopUsers.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getUsers, getPostsByUser, getCommentsByPost } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopUsers = () => {\n  _s();\n  const [topUsers, setTopUsers] = useState([]);\n  useEffect(() => {\n    const fetchTopUsers = async () => {\n      const {\n        users\n      } = await getUsers();\n      const userCommentCounts = [];\n      for (const [id, name] of Object.entries(users)) {\n        const {\n          posts\n        } = await getPostsByUser(id);\n        let totalComments = 0;\n        for (const post of posts) {\n          const {\n            comments\n          } = await getCommentsByPost(post.id);\n          totalComments += comments.length;\n        }\n        userCommentCounts.push({\n          id,\n          name,\n          totalComments\n        });\n      }\n      userCommentCounts.sort((a, b) => b.totalComments - a.totalComments);\n      setTopUsers(userCommentCounts.slice(0, 5));\n    };\n    fetchTopUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: topUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.name, \" - \", user.totalComments, \" comments\"]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TopUsers, \"GdQ0wMUSDDyZtLRF998aH+NrA20=\");\n_c = TopUsers;\nexport default TopUsers;\nvar _c;\n$RefreshReg$(_c, \"TopUsers\");","map":{"version":3,"names":["React","useEffect","useState","getUsers","getPostsByUser","getCommentsByPost","jsxDEV","_jsxDEV","TopUsers","_s","topUsers","setTopUsers","fetchTopUsers","users","userCommentCounts","id","name","Object","entries","posts","totalComments","post","comments","length","push","sort","a","b","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/2215001062/social-media-analytics-final/src/components/TopUsers.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getUsers, getPostsByUser, getCommentsByPost } from \"../api/api\";\n\nconst TopUsers = () => {\n  const [topUsers, setTopUsers] = useState([]);\n\n  useEffect(() => {\n    const fetchTopUsers = async () => {\n      const { users } = await getUsers();\n      const userCommentCounts = [];\n\n      for (const [id, name] of Object.entries(users)) {\n        const { posts } = await getPostsByUser(id);\n        let totalComments = 0;\n\n        for (const post of posts) {\n          const { comments } = await getCommentsByPost(post.id);\n          totalComments += comments.length;\n        }\n\n        userCommentCounts.push({ id, name, totalComments });\n      }\n\n      userCommentCounts.sort((a, b) => b.totalComments - a.totalComments);\n      setTopUsers(userCommentCounts.slice(0, 5));\n    };\n\n    fetchTopUsers();\n  }, []);\n\n  return (\n    <div className=\"card\">\n      <h2>Top Users</h2>\n      <ul>\n        {topUsers.map((user) => (\n          <li key={user.id}>\n            {user.name} - {user.totalComments} comments\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TopUsers;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,cAAc,EAAEC,iBAAiB,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAM;QAAEC;MAAM,CAAC,GAAG,MAAMV,QAAQ,CAAC,CAAC;MAClC,MAAMW,iBAAiB,GAAG,EAAE;MAE5B,KAAK,MAAM,CAACC,EAAE,EAAEC,IAAI,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACL,KAAK,CAAC,EAAE;QAC9C,MAAM;UAAEM;QAAM,CAAC,GAAG,MAAMf,cAAc,CAACW,EAAE,CAAC;QAC1C,IAAIK,aAAa,GAAG,CAAC;QAErB,KAAK,MAAMC,IAAI,IAAIF,KAAK,EAAE;UACxB,MAAM;YAAEG;UAAS,CAAC,GAAG,MAAMjB,iBAAiB,CAACgB,IAAI,CAACN,EAAE,CAAC;UACrDK,aAAa,IAAIE,QAAQ,CAACC,MAAM;QAClC;QAEAT,iBAAiB,CAACU,IAAI,CAAC;UAAET,EAAE;UAAEC,IAAI;UAAEI;QAAc,CAAC,CAAC;MACrD;MAEAN,iBAAiB,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACP,aAAa,GAAGM,CAAC,CAACN,aAAa,CAAC;MACnET,WAAW,CAACG,iBAAiB,CAACc,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC;IAEDhB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKsB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBvB,OAAA;MAAAuB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB3B,OAAA;MAAAuB,QAAA,EACGpB,QAAQ,CAACyB,GAAG,CAAEC,IAAI,iBACjB7B,OAAA;QAAAuB,QAAA,GACGM,IAAI,CAACpB,IAAI,EAAC,KAAG,EAACoB,IAAI,CAAChB,aAAa,EAAC,WACpC;MAAA,GAFSgB,IAAI,CAACrB,EAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACzB,EAAA,CAvCID,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}